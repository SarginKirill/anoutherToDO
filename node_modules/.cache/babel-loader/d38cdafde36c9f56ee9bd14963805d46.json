{"ast":null,"code":"var _jsxFileName = \"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/TaskList/TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToDo, filterCategory, removeToDo, toggleToDo } from \"../../Redux/createActions\";\nimport { Button } from \"../../UI/Button/Button\";\nimport classes from './List.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TaskList() {\n  _s();\n\n  const user = useSelector(store => store.userData.userOnline);\n  const allTodos = useSelector(store => store.taskData.todos);\n  const chooseCategory = useSelector(store => store.taskData.chooseCategory);\n  const dispatch = useDispatch();\n  const [value, setValue] = useState('');\n  const [cat, setCat] = useState('');\n  console.log(chooseCategory);\n  const myTodos = allTodos.filter(item => {\n    if (item.userID === user.id) {\n      if (chooseCategory === 'Все задачи') {\n        return item;\n      } else {\n        if (item.cat === chooseCategory) {\n          return item;\n        }\n      }\n    }\n  });\n\n  function addTaskHandler() {\n    const newTask = {\n      text: value,\n      userID: user.id,\n      taskID: allTodos.length + 1,\n      completed: false,\n      cat: cat\n    };\n    console.log('ADD');\n    dispatch({\n      type: addToDo(),\n      payload: newTask\n    });\n    setValue('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.TaskList,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: myTodos.length ? myTodos.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"label\", {\n          onChange: e => dispatch({\n            type: toggleToDo(),\n            payload: myTodos.find(el => el.taskID === Number(e.target.id))\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.task,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: task.taskID,\n              type: \"checkbox\",\n              defaultChecked: task.completed\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: task.completed ? classes.done : null,\n              children: task.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.delete,\n            id: task.taskID,\n            onClick: e => dispatch({\n              type: removeToDo(),\n              payload: myTodos.find(el => el.taskID === Number(e.target.id))\n            }),\n            children: [\"\\u2716 \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0443\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, task.taskID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u041D\\u0435\\u0442 \\u0437\\u0430\\u0434\\u0430\\u0447\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.row_input,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"form-select\",\n        style: {\n          maxWidth: '150px',\n          marginRight: '10px'\n        },\n        onChange: e => setCat(e.target.value),\n        children: user.categories.map((category, index) => {\n          return /*#__PURE__*/_jsxDEV(\"option\", {\n            value: category,\n            children: category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        name: \"\\u0434\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        onClick: () => addTaskHandler()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TaskList, \"JemI+w76QVO6IW7TFzF+Bpr8i3w=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","addToDo","filterCategory","removeToDo","toggleToDo","Button","classes","TaskList","user","store","userData","userOnline","allTodos","taskData","todos","chooseCategory","dispatch","value","setValue","cat","setCat","console","log","myTodos","filter","item","userID","id","addTaskHandler","newTask","text","taskID","length","completed","type","payload","map","task","e","find","el","Number","target","done","delete","row_input","maxWidth","marginRight","categories","category","index"],"sources":["/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/TaskList/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToDo, filterCategory, removeToDo, toggleToDo } from \"../../Redux/createActions\";\nimport { Button } from \"../../UI/Button/Button\";\nimport classes from './List.module.scss'\n\n\nfunction TaskList() {\n\n    const user = useSelector(store => store.userData.userOnline)\n    const allTodos = useSelector(store => store.taskData.todos) \n    const chooseCategory = useSelector(store => store.taskData.chooseCategory)\n    const dispatch = useDispatch()\n\n    const [value, setValue] = useState('')\n    const [cat, setCat] = useState('')\n\n    console.log(chooseCategory)\n\n    const myTodos = allTodos.filter(item => {\n        \n        if(item.userID === user.id){\n            if(chooseCategory === 'Все задачи'){\n                return item\n            }else{\n                if(item.cat === chooseCategory){\n                    return item\n                }\n            }\n        }})\n\n\n    function addTaskHandler() {\n        const newTask = {\n            text: value,\n            userID: user.id,\n            taskID: allTodos.length + 1,\n            completed: false,\n            cat: cat\n        }\n        console.log('ADD');\n\n        dispatch({type: addToDo(), payload: newTask})\n\n        setValue('')\n    }\n\n\n\n    return(\n        <div className={classes.TaskList}>\n            <div>\n        {\n            myTodos.length\n            ? myTodos.map(task => {\n            return(\n            <label onChange={(e) => dispatch({type: toggleToDo(), payload: myTodos.find(el => el.taskID === Number(e.target.id))})} key={task.taskID}>\n                <div className={classes.task}>\n                <input id={task.taskID} type='checkbox' defaultChecked={task.completed} /> \n                <p className={task.completed ? classes.done : null}>{task.text}</p>\n                </div>\n                <label className={classes.delete} id={task.taskID} onClick={e => dispatch({type: removeToDo(), payload: myTodos.find(el => el.taskID === Number(e.target.id))})}>\n                     &#10006; <span>удалить</span>\n                </label>\n            </label>\n            )\n                })\n            : <h3>Нет задач</h3>\n        }\n        </div>\n\n            \n            <div className={classes.row_input}>\n                <input \n                type=\"text\" \n                className=\"form-control\" \n                placeholder=\"Добавить задачу\" \n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                />\n\n                <select \n                className=\"form-select\" \n                style={{maxWidth: '150px', marginRight: '10px'}}\n                onChange={(e) => setCat(e.target.value)}\n                >\n                    {\n                        user.categories.map((category, index) => {\n                            return (\n                                <option \n                                key={index} \n                                value={category}>{category}</option>\n                            )\n                        })\n                    }\n                    \n                </select>\n\n                <Button \n                name='добавить'\n                onClick={() => addTaskHandler()}\n                />\n            </div>\n        \n        \n        </div>\n    )\n}\n\nexport default TaskList"],"mappings":"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"},"metadata":{},"sourceType":"module"}