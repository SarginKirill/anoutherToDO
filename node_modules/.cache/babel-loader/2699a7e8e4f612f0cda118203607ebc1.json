{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { ADD_USER } from \"./actions\";\nconst initialStateUsers = {\n  userOnline: {\n    name: '',\n    id: ''\n  },\n  users: [{\n    name: 'admin',\n    password: 'admin',\n    id: 1\n  }, {\n    name: 'testUser',\n    password: \"111\",\n    id: 2\n  }]\n};\nconst initialStateTasks = {\n  todos: [{\n    text: 'Test todo',\n    completed: false,\n    cat: 'All task'\n  }],\n  categories: ['All task']\n};\n\nconst taskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateTasks;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst userReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialStateUsers;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_USER:\n      const newUser = action.payload;\n      return state = [...state.users, newUser], { ...state.userOnline\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const rootReducer = combineReducers({\n  taskData: taskReducer,\n  userData: userReducer\n});","map":{"version":3,"names":["combineReducers","ADD_USER","initialStateUsers","userOnline","name","id","users","password","initialStateTasks","todos","text","completed","cat","categories","taskReducer","state","action","type","userReducer","newUser","payload","rootReducer","taskData","userData"],"sources":["/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/reducers.js"],"sourcesContent":["import { combineReducers } from \"redux\";\nimport { ADD_USER } from \"./actions\";\n\n\nconst initialStateUsers = {\n    userOnline: {\n        name: '',\n        id: '',\n    },\n    users: [\n        {\n         name: 'admin',\n         password: 'admin',\n         id: 1\n        },\n        {\n            name: 'testUser',\n            password: \"111\",\n            id: 2\n        }\n    ]\n}\n\nconst initialStateTasks = {\n    todos: [\n        {\n            text: 'Test todo',\n            completed: false,\n            cat: 'All task'\n        }\n    ],\n    categories: ['All task']\n}\n\n\nconst taskReducer = (state = initialStateTasks, action) => {\n    switch (action.type){\n\n\n        default:\n            return state\n    }\n\n}\n\n\n\nconst userReducer = (state = initialStateUsers, action) => {\n    switch (action.type){\n        case ADD_USER:\n            const newUser = action.payload\n            return state = [...state.users, newUser], {...state.userOnline}\n            \n\n\n        default:\n            return state\n    }\n}\n\n\nexport const rootReducer = combineReducers({taskData: taskReducer, userData: userReducer})"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,QAAT,QAAyB,WAAzB;AAGA,MAAMC,iBAAiB,GAAG;EACtBC,UAAU,EAAE;IACRC,IAAI,EAAE,EADE;IAERC,EAAE,EAAE;EAFI,CADU;EAKtBC,KAAK,EAAE,CACH;IACCF,IAAI,EAAE,OADP;IAECG,QAAQ,EAAE,OAFX;IAGCF,EAAE,EAAE;EAHL,CADG,EAMH;IACID,IAAI,EAAE,UADV;IAEIG,QAAQ,EAAE,KAFd;IAGIF,EAAE,EAAE;EAHR,CANG;AALe,CAA1B;AAmBA,MAAMG,iBAAiB,GAAG;EACtBC,KAAK,EAAE,CACH;IACIC,IAAI,EAAE,WADV;IAEIC,SAAS,EAAE,KAFf;IAGIC,GAAG,EAAE;EAHT,CADG,CADe;EAQtBC,UAAU,EAAE,CAAC,UAAD;AARU,CAA1B;;AAYA,MAAMC,WAAW,GAAG,YAAuC;EAAA,IAAtCC,KAAsC,uEAA9BP,iBAA8B;EAAA,IAAXQ,MAAW;;EACvD,QAAQA,MAAM,CAACC,IAAf;IAGI;MACI,OAAOF,KAAP;EAJR;AAOH,CARD;;AAYA,MAAMG,WAAW,GAAG,YAAuC;EAAA,IAAtCH,KAAsC,uEAA9Bb,iBAA8B;EAAA,IAAXc,MAAW;;EACvD,QAAQA,MAAM,CAACC,IAAf;IACI,KAAKhB,QAAL;MACI,MAAMkB,OAAO,GAAGH,MAAM,CAACI,OAAvB;MACA,OAAOL,KAAK,GAAG,CAAC,GAAGA,KAAK,CAACT,KAAV,EAAiBa,OAAjB,CAAR,EAAmC,EAAC,GAAGJ,KAAK,CAACZ;MAAV,CAA1C;;IAIJ;MACI,OAAOY,KAAP;EARR;AAUH,CAXD;;AAcA,OAAO,MAAMM,WAAW,GAAGrB,eAAe,CAAC;EAACsB,QAAQ,EAAER,WAAX;EAAwBS,QAAQ,EAAEL;AAAlC,CAAD,CAAnC"},"metadata":{},"sourceType":"module"}