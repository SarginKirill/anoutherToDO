[{"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/index.js":"1","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/App.js":"2","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/Store.js":"3","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/Actions.js":"4","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/NavBar/NavBar.js":"5","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/UI/Input/Input.js":"6","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/UI/Button/Button.js":"7","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/Form/Form.js":"8","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/LogIn/LogIn.js":"9","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/Registration/Registration.js":"10","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/store.js":"11","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/actions.js":"12","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/reducers.js":"13","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/createActions.js":"14","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/UI/Button/CancelButton.js":"15","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/HomePage/HomePage.js":"16","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/UserCategoriesList/UserCategoriesList.js":"17","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/TaskWindow/TaskWindow.js":"18","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/TaskList/TaskList.js":"19"},{"size":453,"mtime":1657540263321,"results":"20","hashOfConfig":"21"},{"size":461,"mtime":1657189685799,"results":"22","hashOfConfig":"21"},{"size":206,"mtime":1657108622784,"results":"23","hashOfConfig":"21"},{"size":187,"mtime":1657116388649,"results":"24","hashOfConfig":"21"},{"size":954,"mtime":1657129250527,"results":"25","hashOfConfig":"21"},{"size":378,"mtime":1657305015010,"results":"26","hashOfConfig":"21"},{"size":166,"mtime":1657034207726,"results":"27","hashOfConfig":"21"},{"size":1299,"mtime":1657376691488,"results":"28","hashOfConfig":"21"},{"size":2500,"mtime":1657625285012,"results":"29","hashOfConfig":"21"},{"size":3389,"mtime":1657536114923,"results":"30","hashOfConfig":"21"},{"size":281,"mtime":1657627307652,"results":"31","hashOfConfig":"21"},{"size":402,"mtime":1657369176137,"results":"32","hashOfConfig":"21"},{"size":7028,"mtime":1658822159948,"results":"33","hashOfConfig":"21"},{"size":743,"mtime":1657369208477,"results":"34","hashOfConfig":"21"},{"size":240,"mtime":1657129310606,"results":"35","hashOfConfig":"21"},{"size":850,"mtime":1659016140135,"results":"36","hashOfConfig":"21"},{"size":2091,"mtime":1658828171568,"results":"37","hashOfConfig":"21"},{"size":1110,"mtime":1657198234445,"results":"38","hashOfConfig":"21"},{"size":3387,"mtime":1657370316518,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1epp9zh",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"43"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"43"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"43"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"43"},"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/index.js",[],[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/App.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/Store.js",["103","104","105"],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/Actions.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/NavBar/NavBar.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/UI/Input/Input.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/UI/Button/Button.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/Form/Form.js",["106"],[],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Button } from \"../../UI/Button/Button\";\nimport { Input } from \"../../UI/Input/Input\";\nimport classes from './Form.module.scss'\n\n\nfunction Form (props) {\n\n\n    return (\n\n\n        <div className={classes.form}>\n\n            <form>\n                {\n\n                    props.a.map((i) => (\n\n                        <Input \n                        key={i.id} \n                        onChange={i.onChange} \n                        type={i.type} \n                        id={i.id} \n                        ph={i.ph} \n                        label={i.label} \n                        value={i.value} \n                        />\n                        )\n                    )\n                }\n\n                {\n                     props.btn\n                     ?   <div className={classes.btnLine}>\n                         {/* <NavLink to='/'><Button name={props.btn.name}  onClick={props.btn.onClick}/></NavLink> */}\n                         <Button name={props.btn.name}  onClick={props.btn.onClick}/>\n                         {props.children}\n                         </div>\n                     :   null\n                }\n                \n            </form>\n\n        </div>\n\n        \n    )\n\n}\n\n\nexport default Form","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/LogIn/LogIn.js",["107"],[],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { store } from \"../../Redux/store\";\nimport Form from \"../../Components/Form/Form\";\nimport classes from './LogIn.module.scss'\nimport { loginUser } from \"../../Redux/createActions\";\n\n\n\nfunction LogIn() {\n\n    const dispatch = useDispatch()\n\n    const state = useSelector(store => store.userData)\n    \n\n    const [loginValue, loginHandler] = useState('')\n    const [passwordValue, passwordHandler] = useState('')\n\n\n\n    const formAtributes = [\n        {\n            type: 'text',\n            id: 'login',\n            ph: 'Введите ваш логин',\n            label: 'Логин',\n            value: loginValue,\n            onChange: (event) => loginHandler(event.target.value)\n        },\n        {\n            type: 'password',\n            id: 'pass',\n            ph: 'Введите ваш пароль',\n            label: 'Пароль',\n            value: passwordValue,\n            onChange: (event) => passwordHandler(event.target.value)\n        }\n    ]\n\n    const btn = {\n        name: 'Войти',\n        onClick: () => onLoginHandler()\n    }\n\n\n\n    \n    function onLoginHandler() {\n\n        const user = state.users.find(user => user.name.toLocaleLowerCase() === loginValue.toLocaleLowerCase() && user.password === passwordValue)\n        \n\n        if (user){\n            dispatch({type: loginUser(), payload: user})\n        }else{\n            alert('Неверно ввели логин или пароль')\n        }\n        \n\n\n        loginHandler('')\n        passwordHandler('')\n    }\n\n\n\n\n    return (\n\n        <div className={classes.conteiner}>\n\n            {\n                state.userOnline\n                ? null  \n                : <>\n                    <h3>Добро Пожаловать</h3>\n                    <p>Войдите в свой аккаунт</p>\n                    <p className={classes.smallText}>Для тестового ознакомления,\n                    вы можете использовать \"admin\",\n                    в качестве логина и пароля</p>\n\n                    <Form a={formAtributes} btn={btn}>\n                    <span>Или вы можете <NavLink to='registration'>зарегистрироваться</NavLink></span>\n                    </Form>\n                </>\n            }\n            \n        </div>\n    )\n}\n\n\n\nexport default LogIn","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/Registration/Registration.js",["108","109","110"],[],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, Navigate, NavLink, useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport classes from './Registration.module.scss'\nimport Form from \"../../Components/Form/Form\";\nimport { addUser } from \"../../Redux/createActions\";\n\n\nfunction Registration () {\n\n    const state = useSelector(store => store.userData)\n    const navigate = useNavigate()\n\n    const dispatch = useDispatch()\n    \n\n    function onClickHandler() {\n\n        let doubleUserValue = false\n        \n\n        if (!loginValue.trim()){\n            alert('Логин не может быть пустым')\n            return\n        }\n        if (!passwordValue.trim()){\n            alert('Пароль не может быть пустым')\n            return\n        }if (!doublePassword.trim()){\n            alert('Повтор пароля очень важен!')\n            return\n        }\n        if (doublePassword !== passwordValue){\n            alert('Пароли не совпадают')\n            return\n        }\n        state.users.map((user) => {\n            if(user.name === loginValue){\n                doubleUserValue = true\n            }\n        })\n        if(doubleUserValue){\n            alert('Пользователь с таким именем уже зарегестрирован')\n            return\n        }\n        \n        \n\n        const newUser = {\n            name: loginValue,\n            password: passwordValue,\n            categories: ['Все задачи'],\n            id: state.users.length + 1\n        }\n\n       dispatch({type: addUser(), payload: newUser})\n\n       loginHandler('')\n       passwordHandler('')\n       doublePasswordHandler('')\n\n       \n       navigate('/', {replace: true})\n       \n    }\n\n    const [loginValue, loginHandler] = useState('')\n    const [passwordValue, passwordHandler] = useState('')\n    const [doublePassword, doublePasswordHandler] = useState('')\n\n    const formAtributes = [\n        {\n            type: 'text',\n            id: 'login',\n            ph: 'Введите ваш логин',\n            label: 'Логин',\n            value: loginValue,\n            onChange: (event) => loginHandler(event.target.value)\n        },\n        {\n            type: 'password',\n            id: 'pass',\n            ph: 'Введите ваш пароль',\n            label: 'Пароль',\n            value: passwordValue,\n            onChange: (event) => passwordHandler(event.target.value)\n        },\n        {\n            type: 'password',\n            id: 'doublepass',\n            ph: 'Повторите ваш пароль',\n            label: 'Повторите пароль',\n            value: doublePassword,\n            onChange: (event) => doublePasswordHandler(event.target.value)\n        }\n    ]\n\n    const btn = {\n        name: 'Зарегестрироваться',\n        onClick: () => onClickHandler()\n    }\n\n\n    return(\n        <div className={classes.conteiner}>\n\n            <h3>Регистрация</h3>\n            <p>Заполните все поля</p>\n\n\n            <Form a={formAtributes} btn={btn}>\n                <span>Есть аккаунт? <NavLink to='/'>Aвторизуйтесь</NavLink></span>\n            </Form>\n           \n        </div>\n    )\n}\n\nexport default Registration","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/store.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/actions.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/reducers.js",["111","112","113","114","115","116","117","118","119","120"],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Redux/createActions.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/UI/Button/CancelButton.js",["121"],[],"import React from \"react\";\nimport finalPropsSelectorFactory from \"react-redux/es/connect/selectorFactory\";\n\nexport const CancelButton = (props) => <button onClick={props.onClick} type=\"button\" className=\"btn btn-light\">{props.name}</button>","/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/HomePage/HomePage.js",["122"],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/UserCategoriesList/UserCategoriesList.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Pages/TaskWindow/TaskWindow.js",[],[],"/Users/kirill_sargin/My Files/Projects/React/another-todo/src/Components/TaskList/TaskList.js",["123","124"],[],"import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addToDo, filterCategory, removeToDo, toggleToDo } from \"../../Redux/createActions\";\nimport { Button } from \"../../UI/Button/Button\";\nimport classes from './List.module.scss'\n\n\nfunction TaskList() {\n\n    const user = useSelector(store => store.userData.userOnline)\n    const allTodos = useSelector(store => store.taskData.todos) \n    const chooseCategory = useSelector(store => store.taskData.chooseCategory)\n    const dispatch = useDispatch()\n\n    const [value, setValue] = useState('')\n    const [cat, setCat] = useState('')\n\n    const myTodos = allTodos.filter(item => {\n        \n        if(item.userID === user.id){\n            if(chooseCategory === 'Все задачи'){\n                return item\n            }else{\n                if(item.cat === chooseCategory){\n                    return item\n                }\n            }\n        }})\n\n\n    function addTaskHandler() {\n        const newTask = {\n            text: value,\n            userID: user.id,\n            taskID: allTodos.length + 1,\n            completed: false,\n            cat: cat\n        }\n        console.log('ADD');\n\n        dispatch({type: addToDo(), payload: newTask})\n\n        setValue('')\n    }\n\n\n\n    return(\n        <div className={classes.TaskList}>\n            <div>\n        {\n            myTodos.length\n            ? myTodos.map(task => {\n            return(\n            <label onChange={(e) => dispatch({type: toggleToDo(), payload: myTodos.find(el => el.taskID === Number(e.target.id))})} key={task.taskID}>\n                <div className={classes.task}>\n                <input id={task.taskID} type='checkbox' defaultChecked={task.completed} /> \n                <p className={task.completed ? classes.done : null}>{task.text}</p>\n                </div>\n                <label className={classes.delete} id={task.taskID} onClick={e => dispatch({type: removeToDo(), payload: myTodos.find(el => el.taskID === Number(e.target.id))})}>\n                     &#10006; <span>удалить</span>\n                </label>\n            </label>\n            )\n                })\n            : <h3>Нет задач</h3>\n        }\n        </div>\n\n            \n            <div className={classes.row_input}>\n                <input \n                type=\"text\" \n                className=\"form-control\" \n                placeholder=\"Добавить задачу\" \n                value={value}\n                onChange={(e) => setValue(e.target.value)}\n                />\n\n                <select \n                className=\"form-select\" \n                style={{maxWidth: '150px', marginRight: '10px'}}\n                onChange={(e) => setCat(e.target.value)}\n                >\n                    {\n                        user.categories.map((category, index) => {\n                            return (\n                                <option \n                                key={index} \n                                value={category}>{category}</option>\n                            )\n                        })\n                    }\n                    \n                </select>\n\n                <Button \n                name='добавить'\n                onClick={() => addTaskHandler()}\n                />\n            </div>\n        \n        \n        </div>\n    )\n}\n\nexport default TaskList",{"ruleId":"125","severity":1,"message":"126","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"129","line":2,"column":20,"nodeType":"127","messageId":"128","endLine":2,"endColumn":31},{"ruleId":"125","severity":1,"message":"130","line":2,"column":33,"nodeType":"127","messageId":"128","endLine":2,"endColumn":44},{"ruleId":"125","severity":1,"message":"131","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":17},{"ruleId":"125","severity":1,"message":"132","line":4,"column":10,"nodeType":"127","messageId":"128","endLine":4,"endColumn":15},{"ruleId":"125","severity":1,"message":"133","line":3,"column":10,"nodeType":"127","messageId":"128","endLine":3,"endColumn":14},{"ruleId":"125","severity":1,"message":"134","line":3,"column":16,"nodeType":"127","messageId":"128","endLine":3,"endColumn":24},{"ruleId":"135","severity":1,"message":"136","line":38,"column":32,"nodeType":"137","messageId":"138","endLine":38,"endColumn":34},{"ruleId":"125","severity":1,"message":"139","line":9,"column":10,"nodeType":"127","messageId":"128","endLine":9,"endColumn":23},{"ruleId":"125","severity":1,"message":"140","line":10,"column":10,"nodeType":"127","messageId":"128","endLine":10,"endColumn":22},{"ruleId":"125","severity":1,"message":"141","line":11,"column":10,"nodeType":"127","messageId":"128","endLine":11,"endColumn":21},{"ruleId":"125","severity":1,"message":"142","line":11,"column":23,"nodeType":"127","messageId":"128","endLine":11,"endColumn":26},{"ruleId":"125","severity":1,"message":"143","line":11,"column":28,"nodeType":"127","messageId":"128","endLine":11,"endColumn":31},{"ruleId":"125","severity":1,"message":"144","line":11,"column":33,"nodeType":"127","messageId":"128","endLine":11,"endColumn":36},{"ruleId":"125","severity":1,"message":"145","line":11,"column":38,"nodeType":"127","messageId":"128","endLine":11,"endColumn":43},{"ruleId":"125","severity":1,"message":"146","line":14,"column":7,"nodeType":"127","messageId":"128","endLine":14,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":136,"column":50,"nodeType":"137","messageId":"138","endLine":136,"endColumn":52},{"ruleId":"135","severity":1,"message":"136","line":209,"column":47,"nodeType":"137","messageId":"138","endLine":209,"endColumn":49},{"ruleId":"125","severity":1,"message":"147","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":33},{"ruleId":"125","severity":1,"message":"148","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":15},{"ruleId":"125","severity":1,"message":"149","line":3,"column":19,"nodeType":"127","messageId":"128","endLine":3,"endColumn":33},{"ruleId":"135","severity":1,"message":"150","line":18,"column":42,"nodeType":"137","messageId":"151","endLine":18,"endColumn":44},"no-unused-vars","'ADD_TODO' is defined but never used.","Identifier","unusedVar","'TOGGLE_TODO' is defined but never used.","'REMOVE_TODO' is defined but never used.","'NavLink' is defined but never used.","'store' is defined but never used.","'Link' is defined but never used.","'Navigate' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'initializeApp' is defined but never used.","'getFirestore' is defined but never used.","'getDatabase' is defined but never used.","'ref' is defined but never used.","'set' is defined but never used.","'get' is defined but never used.","'child' is defined but never used.","'firebaseConfig' is assigned a value but never used.","'finalPropsSelectorFactory' is defined but never used.","'async' is defined but never used.","'filterCategory' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd"]